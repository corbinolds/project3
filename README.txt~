Corbin Olds
Programming Project 3: Implementing Go-Back-N
Should be able to type make and then run the executable called project3. It will require 5 inputs for the simulator. I always used a value of 1000 for the average time between messages from sender's layer5.
My Checksum algorithm simply converts all characters in the payload to integers and adds them all up along with the sequence number and ack number of the packet. This will detect most corruption, except for the rare case of maybe the payload is corrupted in such a way that the integer calculation from the data is equal to the calculated integer total of the corrupted data. An example would be if the payload was 'abc', but was corrupted to be 'cba', my algorithm would think it is the same since order of addition for integers does not matter, meaning the checksum would be the same for both the actual data and the corrupted data.
 I added in a lot of logging throughout my implementation for sanity checking (i.e. logs whenever a corruption is detected or timer is reset, even logs the current sequence number of the packet being sent). Also, I struggled very hard with recalling the A_output because it would throw off the buffer values, and I was finally able to resolve the issue with the catchUpSequenceNum variable.
